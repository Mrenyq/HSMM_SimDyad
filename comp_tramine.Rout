
R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(TraMineR)

TraMineR stable version 1.8-8 (Built: 2014-08-19)
Website: http://mephisto.unige.ch/traminer
Please type 'citation("TraMineR")' for citation information.

> 
> data <- read.csv(file="tmp.csv", header=TRUE)
> seq <- seqdef(data)
 [>] 7 distinct states appear in the data: 
     1 = 3
     2 = 4
     3 = 5
     4 = 6
     5 = 7
     6 = 8
     7 = 9
 [>] state coding:
       [alphabet]  [label]  [long label] 
     1  3           3        3
     2  4           4        4
     3  5           5        5
     4  6           6        6
     5  7           7        7
     6  8           8        8
     7  9           9        9
 [>] 2 sequences in the data set
 [>] min/max sequence length: 719/719
> 
> res <- seqdist(seq, method="HAM")
 [>] 2 sequences with 7 distinct events/states
 [>] 2 distinct sequences
 [>] min/max sequence length: 719/719
 [>] computing distances using HAM metric
 [>] total time: 1.354 secs
> write.table(res[2:2,1:1], quote=FALSE, file="HAM.csv", row.names=FALSE, col.names=FALSE)
> 
> res <- seqdist(seq, method="DHD")
 [>] 2 sequences with 7 distinct events/states
 [>] creating time varying substitution-cost matrix using transition rates ...
 [>] computing time varying transition rates for states 3/4/5/6/7/8/9 ...
 [>] 2 distinct sequences
 [>] min/max sequence length: 719/719
 [>] computing distances using DHD metric
 [>] total time: 1.991 secs
> write.table(res[2:2,1:1], quote=FALSE, file="DHD.csv", row.names=FALSE, col.names=FALSE)
> 
> res <- seqdist(seq, method="LCP")
 [>] 2 sequences with 7 distinct events/states
 [>] 2 distinct sequences
 [>] min/max sequence length: 719/719
 [>] computing distances using LCP metric
 [>] total time: 1.431 secs
> write.table(res[2:2,1:1], quote=FALSE, file="LCP.csv", row.names=FALSE, col.names=FALSE)
> 
> res <- seqdist(seq, method="LCS")
 [>] 2 sequences with 7 distinct events/states
 [>] 2 distinct sequences
 [>] min/max sequence length: 719/719
 [>] computing distances using LCS metric
 [>] total time: 1.319 secs
> write.table(res[2:2,1:1], quote=FALSE, file="LCS.csv", row.names=FALSE, col.names=FALSE)
> 
> proc.time()
   user  system elapsed 
  6.939   0.139   7.945 
